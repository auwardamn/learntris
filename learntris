#!/usr/bin/env python
import sys

# Init Variables
width = 10
height = 22
score=0
cleared=0
ex=0
# Init Empty Rows
row=[]
emp_row = width* ". "
for i in range(0,height):
    row.append(emp_row)
# Init Empty Rows
tet=[]
emp_tet = 4* ". "
for i in range(0,4):
    tet.append(emp_tet)
# Main Loop
while ex==0:
    command = sys.stdin.readline()  # Get Command Input

    if command.strip() == 'p':      # Print Current Matrix Status
        for i in range(0, height):
            sys.stdout.write(row[i])
            sys.stdout.write("\n")

    elif command.strip() == 'g':    # Input New Matrix Status
        for i in range(0,height):
            input=sys.stdin.readline()
            row[i]=str.rstrip(input)

    elif command.strip() == 'c':    # Clear Matrix
        for i in range(0,height):
            row[i]=(emp_row)

    elif command.strip() == '?s':   # Request Score Return
        print(score)

    elif command.strip() == '?n':   # Request Cleared Lines Counter
        print(cleared)

    elif command.strip() == 's':    # Check For Solid Lines
        for i in range(0,height):
            line = str(row[i])
            if line.find('.') == -1:    #Clear if needed
                row[i]=emp_row
                cleared=cleared+1
                score=score+100

    elif command.strip() == 'I':    #Activate 'I' tetramino
        for i in range(0,4):        #Clear tet
            tet[i]=emp_tet
        tet[1]="c c c c"

    elif command.strip() == 'O':    #Activate 'O' tetramino
        tet=[1,2]
        tet[0]="y y"                #Shape tet
        tet[1]="y y"

    elif command.strip() == 'Z':    #Activate 'Z' tetramino
        tet=[1,2,3]                   #Clear tet
        tet[0]="r r ."                #Shape tet
        tet[1]=". r r"
        tet[2]='. . .'

    elif command.strip() == 't':    #Display Active Tetramino
        for i in range(0,len(tet)):
            sys.stdout.write(tet[i])
            sys.stdout.write("\n")

    elif command.strip() == 'q':    # Quit Command
        ex=1

    else:                          # Invalid Input
        print('Command Not Recognized')